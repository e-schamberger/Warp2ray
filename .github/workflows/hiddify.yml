name: Hiddify Windows Setup

on:
  workflow_dispatch:

jobs:
  hiddify-setup:
    runs-on: windows-latest

    steps:
    - name: Download Hiddify Portable
      run: |
        $url = "https://github.com/hiddify/hiddify-app/releases/download/v2.0.5/Hiddify-Windows-Portable-x64.zip"
        $output = "Hiddify-Windows-Portable-x64.zip"
        Invoke-WebRequest -Uri $url -OutFile $output

    - name: Extract Files
      run: |
        Expand-Archive -Path "Hiddify-Windows-Portable-x64.zip" -DestinationPath .

    - name: Set clipboard content
      run: |
        $configUrl = "https://raw.githubusercontent.com/e-schamberger/free/refs/heads/main/config/vless.json"
        Set-Clipboard -Value $configUrl

    - name: Create automation script
      run: |
        @'
        Add-Type -AssemblyName System.Windows.Forms
        Add-Type -AssemblyName Microsoft.VisualBasic

        # Start Hiddify
        Start-Process "Hiddify.exe" -PassThru
        Start-Sleep -Seconds 20

        # Click 'Start' button
        [Microsoft.VisualBasic.Interaction]::AppActivate("Hiddify")
        Start-Sleep -Seconds 3
        [System.Windows.Forms.SendKeys]::SendWait("{TAB 5}")  # 5 times tab
        [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
        Start-Sleep -Seconds 10

        # Click '+' button
        [System.Windows.Forms.SendKeys]::SendWait("%{TAB}")   # Alt+Tab to focus
        [System.Windows.Forms.SendKeys]::SendWait("{TAB 10}") # 10 times tab
        [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
        Start-Sleep -Seconds 5

        # Select 'Add from clipboard'
        [System.Windows.Forms.SendKeys]::SendWait("{DOWN 4}") # 4 times down
        [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
        Start-Sleep -Seconds 30  # Wait for download and save

        # Close application
        Get-Process -Name "Hiddify" | Stop-Process -Force
        '@ | Out-File -FilePath "automation.ps1" -Encoding UTF8

    - name: Run Hiddify with automation
      run: |
        powershell -ExecutionPolicy Bypass -File "automation.ps1"

    - name: Find config file
      run: |
        # Search for config file recursively
        $configFile = Get-ChildItem -Path "C:\" -Filter "*.json" -Recurse -ErrorAction SilentlyContinue | 
                      Where-Object { $_.FullName -match "Hiddify[\\/]hiddify[\\/]configs" } |
                      Select-Object -First 1 -ExpandProperty FullName
        
        if ($configFile) {
            Write-Host "Found config file at: $configFile"
            $env:CONFIG_FILE_PATH = $configFile
            Add-Content -Path $env:GITHUB_ENV -Value "CONFIG_FILE_PATH=$configFile"
        } else {
            Write-Error "Config file not found!"
            # List possible directories for debugging
            Write-Host "Listing possible config directories:"
            Get-ChildItem -Path "$env:APPDATA" -Recurse -Filter "Hiddify" -Directory | Select-Object FullName
            exit 1
        }

    - name: Save config file
      run: |
        $sourcePath = $env:CONFIG_FILE_PATH
        $destDir = "hiddify-config"
        New-Item -ItemType Directory -Path $destDir -Force
        
        # Copy config file
        Copy-Item -Path $sourcePath -Destination "$destDir/config.json" -Force
        Write-Host "Config file copied successfully"

    - name: Upload config to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: hiddify-config
        path: hiddify-config/
